<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classUrho3D_1_1Quaternion" kind="class" language="C++" prot="public">
    <compoundname>Urho3D::Quaternion</compoundname>
    <includes refid="Quaternion_8h" local="no">Quaternion.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classUrho3D_1_1Quaternion_1a2f0e08e51d101b8ad0bf267664d1a1d3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Urho3D::Quaternion::w_</definition>
        <argsstring></argsstring>
        <name>w_</name>
        <briefdescription>
<para>W coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="468" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUrho3D_1_1Quaternion_1a2a2942c9b8d9079fb00573d37b69ae3b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Urho3D::Quaternion::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <briefdescription>
<para>X coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="470" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUrho3D_1_1Quaternion_1a972ee8620f1e577458dd62a8c13e2f41" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Urho3D::Quaternion::y_</definition>
        <argsstring></argsstring>
        <name>y_</name>
        <briefdescription>
<para>Y coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="472" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUrho3D_1_1Quaternion_1a8a34f5a26639d9ca306dd881229d046e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Urho3D::Quaternion::z_</definition>
        <argsstring></argsstring>
        <name>z_</name>
        <briefdescription>
<para>Z coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="474" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classUrho3D_1_1Quaternion_1af53dbc2f29f41c9a4e7c432ccca289c5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>const Quaternion Urho3D::Quaternion::IDENTITY</definition>
        <argsstring></argsstring>
        <name>IDENTITY</name>
        <briefdescription>
<para>Identity quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="477" column="29" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ab0fb7d74bb71be0d5ca3b14d0d08e8ec" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>() noexcept</argsstring>
        <name>Quaternion</name>
        <briefdescription>
<para>Construct an identity quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="39" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="39" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1afa09c3c1979638d72ef0a3c75a48006f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(const Quaternion &amp;quat) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>quat</declname>
        </param>
        <briefdescription>
<para>Copy-construct from another quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="53" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ae4373503907bf0440668b040501a5557" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(float w, float x, float y, float z) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Construct from values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="68" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a68699ae91936776733fe0a26934bc7e4" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(const float *data) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Construct from a float array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="82" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a388f984ab1eb52687093e46188b33860" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(float angle, const Vector3 &amp;axis) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>Construct from an angle (in degrees) and axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="96" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a4223c1232bb979de14df8ddcdc551fbe" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(float angle) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Construct from an angle (in degrees, for Urho2D). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="102" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ad1cea968dc6a68076355b62b10237312" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(float x, float y, float z) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Construct from Euler angles (in degrees). Equivalent to Y*X*Z. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="108" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a6cff3e100bdc6072389d2ea0a6b5a53a" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(const Vector3 &amp;angles) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>angles</declname>
        </param>
        <briefdescription>
<para>Construct from Euler angles (in degrees). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="114" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1abe10f270c35797ff730253a95bb0affe" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(const Vector3 &amp;start, const Vector3 &amp;end) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Construct from the rotation difference between two direction vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="120" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a91c6b4df73839698dfafde8f376d80eb" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(const Vector3 &amp;xAxis, const Vector3 &amp;yAxis, const Vector3 &amp;zAxis) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>xAxis</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>yAxis</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>zAxis</declname>
        </param>
        <briefdescription>
<para>Construct from orthonormal axes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="126" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ab438a481269a510b3683a7d0f5cec9ec" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Quaternion::Quaternion</definition>
        <argsstring>(const Matrix3 &amp;matrix) noexcept</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Matrix3" kindref="compound">Matrix3</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Construct from a rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="132" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a595684d9cc23767f9e024f65b8066a40" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; Urho3D::Quaternion::operator=</definition>
        <argsstring>(const Quaternion &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assign from another quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="145" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="145" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ace83e2a0850548533164f5fc172f0966" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; Urho3D::Quaternion::operator+=</definition>
        <argsstring>(const Quaternion &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Add-assign a quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="159" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="159" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ac8e067e6fc4e63c3a5eac6010bcf79e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>Quaternion&amp; Urho3D::Quaternion::operator*=</definition>
        <argsstring>(float rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Multiply-assign a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="173" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="173" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a18b8d21f7a335c955c79e4745e13240b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Quaternion::operator==</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for equality with another quaternion without epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="187" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="187" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a98889af120551d661b209a98a47818e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Quaternion::operator!=</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for inequality with another quaternion without epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="200" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a9ec7abf5e6056b033d2be7fafa312365" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::operator*</definition>
        <argsstring>(float rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Multiply with a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="203" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ac8f3c757a5aac654d765f04e3a80ff68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Return negation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="213" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="213" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a6c43ba062b8434e0874635c84da0215b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::operator+</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Add a quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="223" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a2e5c66a99cb90bf1add153488257355e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::operator-</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Subtract a quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="233" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="233" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1aaa5218028498bfc52cd25cd4c341a59f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::operator*</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Multiply a quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="243" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="243" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a6fc68f7fc8a5ba11da42afbb185f4209" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Quaternion::operator*</definition>
        <argsstring>(const Vector3 &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Multiply a <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="268" column="13" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="268" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ace2f5a09680f7d9c44186a8a3aeb9e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Quaternion::FromAngleAxis</definition>
        <argsstring>(float angle, const Vector3 &amp;axis)</argsstring>
        <name>FromAngleAxis</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>Define from an angle (in degrees) and axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="300" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ab56365284a371f7f82325e85665f20f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Quaternion::FromEulerAngles</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>FromEulerAngles</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Define from Euler angles (in degrees). Equivalent to Y*X*Z. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="302" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a7b5431f8dd2cf78744d07b9260b3677e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Quaternion::FromRotationTo</definition>
        <argsstring>(const Vector3 &amp;start, const Vector3 &amp;end)</argsstring>
        <name>FromRotationTo</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Define from the rotation difference between two direction vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="304" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a0f7fbbb259a665f94df597eb1d81dbc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Quaternion::FromAxes</definition>
        <argsstring>(const Vector3 &amp;xAxis, const Vector3 &amp;yAxis, const Vector3 &amp;zAxis)</argsstring>
        <name>FromAxes</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>xAxis</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>yAxis</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>zAxis</declname>
        </param>
        <briefdescription>
<para>Define from orthonormal axes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="306" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a0fdf9c0ccae7caf66fb93c5ace54e9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Quaternion::FromRotationMatrix</definition>
        <argsstring>(const Matrix3 &amp;matrix)</argsstring>
        <name>FromRotationMatrix</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Matrix3" kindref="compound">Matrix3</ref> &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Define from a rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="308" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a18879f2754646ddf9a8608d9eaafff35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Quaternion::FromLookRotation</definition>
        <argsstring>(const Vector3 &amp;direction, const Vector3 &amp;up=Vector3::UP)</argsstring>
        <name>FromLookRotation</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>up</declname>
          <defval><ref refid="classUrho3D_1_1Vector3_1a9a7af73dfe451a97a561760ee28b119e" kindref="member">Vector3::UP</ref></defval>
        </param>
        <briefdescription>
<para>Define from a direction to look in and an up direction. Return true if successful, or false if would result in a NaN, in which case the current value remains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="310" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a780e58000eb21f11ec9864887b865b48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Quaternion::Normalize</definition>
        <argsstring>()</argsstring>
        <name>Normalize</name>
        <briefdescription>
<para>Normalize to unit length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="313" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="313" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ad7df8957d496d95e84eb9b585df72ee3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::Normalized</definition>
        <argsstring>() const</argsstring>
        <name>Normalized</name>
        <briefdescription>
<para>Return normalized to unit length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="339" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="339" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a4d4b3c4b38d40c1e216c51e058709545" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::Inverse</definition>
        <argsstring>() const</argsstring>
        <name>Inverse</name>
        <briefdescription>
<para>Return inverse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="364" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="364" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a779c9af40a9377e9756cb8069b0dd919" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Quaternion::LengthSquared</definition>
        <argsstring>() const</argsstring>
        <name>LengthSquared</name>
        <briefdescription>
<para>Return squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="384" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="384" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a577841b15533db5ec3ba98fda5692cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Quaternion::DotProduct</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>DotProduct</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Calculate dot product. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="398" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="398" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a32a7ceb9f16b3e77aa2fa5a34b9c4519" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Quaternion::Equals</definition>
        <argsstring>(const Quaternion &amp;rhs) const</argsstring>
        <name>Equals</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for equality with another quaternion with epsilon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="413" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a59be2a20efbfd54a6aa5b920ab9aa3f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Quaternion::IsNaN</definition>
        <argsstring>() const</argsstring>
        <name>IsNaN</name>
        <briefdescription>
<para>Return whether any element is NaN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="419" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="419" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a6fd533061a970085a3b208575bd4d37d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Quaternion::IsInf</definition>
        <argsstring>() const</argsstring>
        <name>IsInf</name>
        <briefdescription>
<para>Return whether any element is Inf. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="422" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1aa873e761885025dc47178cb1464c8838" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::Conjugate</definition>
        <argsstring>() const</argsstring>
        <name>Conjugate</name>
        <briefdescription>
<para>Return conjugate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="425" column="16" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="425" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a4b0b0a8b518f80caaa81c41f42b93432" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Quaternion::EulerAngles</definition>
        <argsstring>() const</argsstring>
        <name>EulerAngles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return Euler angles in degrees. BIND_AS_PROPERTY </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="437" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ae5d50150c9fba0b05885339001685495" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Quaternion::YawAngle</definition>
        <argsstring>() const</argsstring>
        <name>YawAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return yaw angle in degrees. BIND_AS_ALIAS_get_yaw </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="440" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a4c8baca841bc265593038fa4a5b32847" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Quaternion::PitchAngle</definition>
        <argsstring>() const</argsstring>
        <name>PitchAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return pitch angle in degrees. BIND_AS_ALIAS_get_pitch </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="443" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a84d99238ace3cbe144d4caae42fa1bc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Quaternion::RollAngle</definition>
        <argsstring>() const</argsstring>
        <name>RollAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return roll angle in degrees. BIND_AS_ALIAS_get_roll </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="446" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ae1049770c2794258a54c7cf3a66559a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Quaternion::Axis</definition>
        <argsstring>() const</argsstring>
        <name>Axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return rotation axis. BIND_AS_PROPERTY </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="449" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a79162695445da7cf6da908d1982690da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Quaternion::Angle</definition>
        <argsstring>() const</argsstring>
        <name>Angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return rotation angle. BIND_AS_PROPERTY </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="452" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a0a55e229141be1ba710b0c134c61c966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Matrix3" kindref="compound">Matrix3</ref></type>
        <definition>Matrix3 Urho3D::Quaternion::RotationMatrix</definition>
        <argsstring>() const</argsstring>
        <name>RotationMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the rotation matrix that corresponds to this quaternion. BIND_AS_PROPERTY </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="455" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a6946fecf4f22b5cbba80eec8c0b25c05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::Slerp</definition>
        <argsstring>(const Quaternion &amp;rhs, float t) const</argsstring>
        <name>Slerp</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Spherical interpolation with another quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="457" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1ad2dd547bec917e338eb2001f2d5d9cd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Urho3D::Quaternion::Nlerp</definition>
        <argsstring>(const Quaternion &amp;rhs, float t, bool shortestPath=false) const</argsstring>
        <name>Nlerp</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shortestPath</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Normalized linear interpolation with another quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="459" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a008c7accb71a185848e5b52a79933dbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* Urho3D::Quaternion::Data</definition>
        <argsstring>() const</argsstring>
        <name>Data</name>
        <briefdescription>
<para>Return float data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="462" column="17" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Quaternion_1a8a0544e90cdc3857ca2d23370ad62357" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1String" kindref="compound">String</ref></type>
        <definition>String Urho3D::Quaternion::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Return as string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="465" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Rotation represented as a four-dimensional normalized vector. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Urho3D::Quaternion</label>
        <link refid="classUrho3D_1_1Quaternion"/>
        <childnode refid="1" relation="usage">
          <edgelabel>IDENTITY</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" line="35" column="1" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Quaternion.h" bodystart="36" bodyend="478"/>
    <listofallmembers>
      <member refid="classUrho3D_1_1Quaternion_1a79162695445da7cf6da908d1982690da" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Angle</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ae1049770c2794258a54c7cf3a66559a6" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Axis</name></member>
      <member refid="classUrho3D_1_1Quaternion_1aa873e761885025dc47178cb1464c8838" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Conjugate</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a008c7accb71a185848e5b52a79933dbe" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Data</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a577841b15533db5ec3ba98fda5692cf6" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>DotProduct</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a32a7ceb9f16b3e77aa2fa5a34b9c4519" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Equals</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a4b0b0a8b518f80caaa81c41f42b93432" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>EulerAngles</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ace2f5a09680f7d9c44186a8a3aeb9e35" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>FromAngleAxis</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a0f7fbbb259a665f94df597eb1d81dbc7" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>FromAxes</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ab56365284a371f7f82325e85665f20f2" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>FromEulerAngles</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a18879f2754646ddf9a8608d9eaafff35" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>FromLookRotation</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a0fdf9c0ccae7caf66fb93c5ace54e9de" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>FromRotationMatrix</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a7b5431f8dd2cf78744d07b9260b3677e" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>FromRotationTo</name></member>
      <member refid="classUrho3D_1_1Quaternion_1af53dbc2f29f41c9a4e7c432ccca289c5" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>IDENTITY</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a4d4b3c4b38d40c1e216c51e058709545" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Inverse</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a6fd533061a970085a3b208575bd4d37d" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>IsInf</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a59be2a20efbfd54a6aa5b920ab9aa3f8" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>IsNaN</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a779c9af40a9377e9756cb8069b0dd919" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>LengthSquared</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ad2dd547bec917e338eb2001f2d5d9cd1" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Nlerp</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a780e58000eb21f11ec9864887b865b48" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Normalize</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ad7df8957d496d95e84eb9b585df72ee3" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Normalized</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a98889af120551d661b209a98a47818e6" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator!=</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a9ec7abf5e6056b033d2be7fafa312365" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator*</name></member>
      <member refid="classUrho3D_1_1Quaternion_1aaa5218028498bfc52cd25cd4c341a59f" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator*</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a6fc68f7fc8a5ba11da42afbb185f4209" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator*</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ac8e067e6fc4e63c3a5eac6010bcf79e7" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator*=</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a6c43ba062b8434e0874635c84da0215b" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator+</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ace83e2a0850548533164f5fc172f0966" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator+=</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ac8f3c757a5aac654d765f04e3a80ff68" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator-</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a2e5c66a99cb90bf1add153488257355e" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator-</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a595684d9cc23767f9e024f65b8066a40" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a18b8d21f7a335c955c79e4745e13240b" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>operator==</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a4c8baca841bc265593038fa4a5b32847" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>PitchAngle</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ab0fb7d74bb71be0d5ca3b14d0d08e8ec" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1afa09c3c1979638d72ef0a3c75a48006f" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ae4373503907bf0440668b040501a5557" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a68699ae91936776733fe0a26934bc7e4" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a388f984ab1eb52687093e46188b33860" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a4223c1232bb979de14df8ddcdc551fbe" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ad1cea968dc6a68076355b62b10237312" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a6cff3e100bdc6072389d2ea0a6b5a53a" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1abe10f270c35797ff730253a95bb0affe" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a91c6b4df73839698dfafde8f376d80eb" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ab438a481269a510b3683a7d0f5cec9ec" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a84d99238ace3cbe144d4caae42fa1bc4" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>RollAngle</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a0a55e229141be1ba710b0c134c61c966" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>RotationMatrix</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a6946fecf4f22b5cbba80eec8c0b25c05" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>Slerp</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a8a0544e90cdc3857ca2d23370ad62357" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>ToString</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a2f0e08e51d101b8ad0bf267664d1a1d3" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>w_</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a2a2942c9b8d9079fb00573d37b69ae3b" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>x_</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a972ee8620f1e577458dd62a8c13e2f41" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>y_</name></member>
      <member refid="classUrho3D_1_1Quaternion_1ae5d50150c9fba0b05885339001685495" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>YawAngle</name></member>
      <member refid="classUrho3D_1_1Quaternion_1a8a34f5a26639d9ca306dd881229d046e" prot="public" virt="non-virtual"><scope>Urho3D::Quaternion</scope><name>z_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
