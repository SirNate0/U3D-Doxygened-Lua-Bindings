<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classUrho3D_1_1Sphere" kind="class" language="C++" prot="public">
    <compoundname>Urho3D::Sphere</compoundname>
    <includes refid="Sphere_8h" local="no">Sphere.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classUrho3D_1_1Sphere_1ac5d5f99064023816b297780fcab85109" prot="public" static="no" mutable="no">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Sphere::center_</definition>
        <argsstring></argsstring>
        <name>center_</name>
        <briefdescription>
<para><ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> center. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="203" column="13" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUrho3D_1_1Sphere_1a97194148abd15ecea37c417304c1173c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Urho3D::Sphere::radius_</definition>
        <argsstring></argsstring>
        <name>radius_</name>
        <initializer>{}</initializer>
        <briefdescription>
<para><ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="205" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a076c8d857f61d4eaf644c1e7d4a77b13" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>() noexcept</argsstring>
        <name>Sphere</name>
        <briefdescription>
<para>Construct undefined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="40" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a50b536d603f59eaa90fccf4c6e7333a8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>(const Sphere &amp;sphere) noexcept=default</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Copy-construct from another sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="47" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a6916102a9225b149ae28c30af91ac154" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>(const Vector3 &amp;center, float radius) noexcept</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Construct from center and radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="50" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a9c36975933ebb46c9be6a788e82e4dc5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>(const Vector3 *vertices, unsigned count) noexcept</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Construct from an array of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="57" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1abc87c8154a0c1646d5182f4c7cde55ee" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>(const BoundingBox &amp;box) noexcept</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Construct from a bounding box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="63" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a19d50feab2c1ea6fc7f9e54d96bfcd2b" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>(const Frustum &amp;frustum) noexcept</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Frustum" kindref="compound">Frustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <briefdescription>
<para>Construct from a frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="69" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1aaa740dc9513756293812885736652a6b" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Sphere::Sphere</definition>
        <argsstring>(const Polyhedron &amp;poly) noexcept</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Polyhedron" kindref="compound">Polyhedron</ref> &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
<para>Construct from a polyhedron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="75" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a0e26283dda775917acad0daf04c7d82d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
        <definition>Sphere&amp; Urho3D::Sphere::operator=</definition>
        <argsstring>(const Sphere &amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assign from another sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="81" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a97bc52f5276301bf63a2e3a36ea22469" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Sphere::operator==</definition>
        <argsstring>(const Sphere &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for equality with another sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="84" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1af969832ce892b89f5dd23dbb658e3bce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Sphere::operator!=</definition>
        <argsstring>(const Sphere &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for inequality with another sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="87" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a605a559ba1b2eec5e65d17a39b849b60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Define</definition>
        <argsstring>(const Sphere &amp;sphere)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Define from another sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="90" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a4b245e02d04bf7109c1f61c8f9c280d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Define</definition>
        <argsstring>(const Vector3 &amp;center, float radius)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Define from center and radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="96" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1ad6de05290d5055a082e3d9b43655336f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Define</definition>
        <argsstring>(const Vector3 *vertices, unsigned count)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Define from an array of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a874cb74998723002fcffbc591313de5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Define</definition>
        <argsstring>(const BoundingBox &amp;box)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Define from a bounding box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a1077254c9dabc3cfb7953719068fd369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Define</definition>
        <argsstring>(const Frustum &amp;frustum)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Frustum" kindref="compound">Frustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <briefdescription>
<para>Define from a frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="107" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a0412fa9e0c6c54d3ece0f6f7c9d2dcb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Define</definition>
        <argsstring>(const Polyhedron &amp;poly)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Polyhedron" kindref="compound">Polyhedron</ref> &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
<para>Define from a polyhedron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a7b5d4b9d99b9b4b158ca504a4e7a5b93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Merge</definition>
        <argsstring>(const Vector3 &amp;point)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Merge a point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="112" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="112" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a486bfd22bdd03c4e3f2a32a82b7e1553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Merge</definition>
        <argsstring>(const Vector3 *vertices, unsigned count)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Merge an array of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a97d624c4eb77e300556222e5e5898821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Merge</definition>
        <argsstring>(const BoundingBox &amp;box)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Merge a bounding box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a790a7e9c6d43465a1ed5f9115daf805d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Merge</definition>
        <argsstring>(const Frustum &amp;frustum)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Frustum" kindref="compound">Frustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <briefdescription>
<para>Merge a frustum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a86aa6ab6cbb630ebdf16ee8c4ac834f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Merge</definition>
        <argsstring>(const Polyhedron &amp;poly)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Polyhedron" kindref="compound">Polyhedron</ref> &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
<para>Merge a polyhedron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1ac7420edaf1d8d1850a794c3f885c60a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Merge</definition>
        <argsstring>(const Sphere &amp;sphere)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Merge a sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1ac6437c8b116f63a6d3fcbf996a49a34b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Sphere::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clear to undefined state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="144" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1ae66dda3bcced159016d00acc9dc56a02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Sphere::Defined</definition>
        <argsstring>() const</argsstring>
        <name>Defined</name>
        <briefdescription>
<para>Return true if this sphere is defined via a previous call to <ref refid="classUrho3D_1_1Sphere_1a605a559ba1b2eec5e65d17a39b849b60" kindref="member">Define()</ref> or <ref refid="classUrho3D_1_1Sphere_1a7b5d4b9d99b9b4b158ca504a4e7a5b93" kindref="member">Merge()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="151" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a23cedf63ba7aa18b8c3cb5300743ba2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="MathDefs_8h_1ac8f8b9469a6348fb469c53533bc4d13e" kindref="member">Intersection</ref></type>
        <definition>Intersection Urho3D::Sphere::IsInside</definition>
        <argsstring>(const Vector3 &amp;point) const</argsstring>
        <name>IsInside</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Test if a point is inside. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="157" column="18" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="157" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a72db7567431d6ca0b1edb796bf011602" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="MathDefs_8h_1ac8f8b9469a6348fb469c53533bc4d13e" kindref="member">Intersection</ref></type>
        <definition>Intersection Urho3D::Sphere::IsInside</definition>
        <argsstring>(const Sphere &amp;sphere) const</argsstring>
        <name>IsInside</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Test if another sphere is inside, outside or intersects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="167" column="18" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="167" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a681c28b29e99b644f9a3cb89f4a68946" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="MathDefs_8h_1ac8f8b9469a6348fb469c53533bc4d13e" kindref="member">Intersection</ref></type>
        <definition>Intersection Urho3D::Sphere::IsInsideFast</definition>
        <argsstring>(const Sphere &amp;sphere) const</argsstring>
        <name>IsInsideFast</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Test if another sphere is (partially) inside or outside. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="179" column="18" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="179" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a0e49adf9ae70c3c6505298dda44eeeac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MathDefs_8h_1ac8f8b9469a6348fb469c53533bc4d13e" kindref="member">Intersection</ref></type>
        <definition>Intersection Urho3D::Sphere::IsInside</definition>
        <argsstring>(const BoundingBox &amp;box) const</argsstring>
        <name>IsInside</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Test if a bounding box is inside, outside or intersects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="191" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a2b3a1756dbe4b426814fb2d58df16792" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MathDefs_8h_1ac8f8b9469a6348fb469c53533bc4d13e" kindref="member">Intersection</ref></type>
        <definition>Intersection Urho3D::Sphere::IsInsideFast</definition>
        <argsstring>(const BoundingBox &amp;box) const</argsstring>
        <name>IsInsideFast</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Test if a bounding box is (partially) inside or outside. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="193" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a8164a8279b94e907d6f1f6e1b3d621a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Sphere::Distance</definition>
        <argsstring>(const Vector3 &amp;point) const</argsstring>
        <name>Distance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Return distance of a point to the surface, or 0 if inside. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="196" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1ab48a46b094436f9c12efac572dd1efef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Sphere::GetLocalPoint</definition>
        <argsstring>(float theta, float phi) const</argsstring>
        <name>GetLocalPoint</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Return point on the sphere relative to sphere position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="198" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Sphere_1a87d3287a4cae266144da2ae624933ef1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Sphere::GetPoint</definition>
        <argsstring>(float theta, float phi) const</argsstring>
        <name>GetPoint</name>
        <param>
          <type>float</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Return point on the sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="200" column="13" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="200" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Sphere in three-dimensional space. ALL_FLOATS </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Urho3D::Sphere</label>
        <link refid="classUrho3D_1_1Sphere"/>
        <childnode refid="2" relation="usage">
          <edgelabel>center_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Urho3D::Vector3</label>
        <link refid="classUrho3D_1_1Vector3"/>
        <childnode refid="2" relation="usage">
          <edgelabel>BACK</edgelabel>
          <edgelabel>DOWN</edgelabel>
          <edgelabel>FORWARD</edgelabel>
          <edgelabel>LEFT</edgelabel>
          <edgelabel>ONE</edgelabel>
          <edgelabel>RIGHT</edgelabel>
          <edgelabel>UP</edgelabel>
          <edgelabel>ZERO</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" line="36" column="1" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Sphere.h" bodystart="37" bodyend="206"/>
    <listofallmembers>
      <member refid="classUrho3D_1_1Sphere_1ac5d5f99064023816b297780fcab85109" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>center_</name></member>
      <member refid="classUrho3D_1_1Sphere_1ac6437c8b116f63a6d3fcbf996a49a34b" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Clear</name></member>
      <member refid="classUrho3D_1_1Sphere_1a605a559ba1b2eec5e65d17a39b849b60" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Sphere_1a4b245e02d04bf7109c1f61c8f9c280d7" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Sphere_1ad6de05290d5055a082e3d9b43655336f" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Sphere_1a874cb74998723002fcffbc591313de5f" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Sphere_1a1077254c9dabc3cfb7953719068fd369" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Sphere_1a0412fa9e0c6c54d3ece0f6f7c9d2dcb9" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Sphere_1ae66dda3bcced159016d00acc9dc56a02" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Defined</name></member>
      <member refid="classUrho3D_1_1Sphere_1a8164a8279b94e907d6f1f6e1b3d621a4" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Distance</name></member>
      <member refid="classUrho3D_1_1Sphere_1ab48a46b094436f9c12efac572dd1efef" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>GetLocalPoint</name></member>
      <member refid="classUrho3D_1_1Sphere_1a87d3287a4cae266144da2ae624933ef1" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>GetPoint</name></member>
      <member refid="classUrho3D_1_1Sphere_1a23cedf63ba7aa18b8c3cb5300743ba2d" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>IsInside</name></member>
      <member refid="classUrho3D_1_1Sphere_1a72db7567431d6ca0b1edb796bf011602" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>IsInside</name></member>
      <member refid="classUrho3D_1_1Sphere_1a0e49adf9ae70c3c6505298dda44eeeac" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>IsInside</name></member>
      <member refid="classUrho3D_1_1Sphere_1a681c28b29e99b644f9a3cb89f4a68946" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>IsInsideFast</name></member>
      <member refid="classUrho3D_1_1Sphere_1a2b3a1756dbe4b426814fb2d58df16792" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>IsInsideFast</name></member>
      <member refid="classUrho3D_1_1Sphere_1a7b5d4b9d99b9b4b158ca504a4e7a5b93" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Merge</name></member>
      <member refid="classUrho3D_1_1Sphere_1a486bfd22bdd03c4e3f2a32a82b7e1553" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Merge</name></member>
      <member refid="classUrho3D_1_1Sphere_1a97d624c4eb77e300556222e5e5898821" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Merge</name></member>
      <member refid="classUrho3D_1_1Sphere_1a790a7e9c6d43465a1ed5f9115daf805d" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Merge</name></member>
      <member refid="classUrho3D_1_1Sphere_1a86aa6ab6cbb630ebdf16ee8c4ac834f9" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Merge</name></member>
      <member refid="classUrho3D_1_1Sphere_1ac7420edaf1d8d1850a794c3f885c60a6" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Merge</name></member>
      <member refid="classUrho3D_1_1Sphere_1af969832ce892b89f5dd23dbb658e3bce" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>operator!=</name></member>
      <member refid="classUrho3D_1_1Sphere_1a0e26283dda775917acad0daf04c7d82d" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1Sphere_1a97bc52f5276301bf63a2e3a36ea22469" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>operator==</name></member>
      <member refid="classUrho3D_1_1Sphere_1a97194148abd15ecea37c417304c1173c" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>radius_</name></member>
      <member refid="classUrho3D_1_1Sphere_1a076c8d857f61d4eaf644c1e7d4a77b13" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
      <member refid="classUrho3D_1_1Sphere_1a50b536d603f59eaa90fccf4c6e7333a8" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
      <member refid="classUrho3D_1_1Sphere_1a6916102a9225b149ae28c30af91ac154" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
      <member refid="classUrho3D_1_1Sphere_1a9c36975933ebb46c9be6a788e82e4dc5" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
      <member refid="classUrho3D_1_1Sphere_1abc87c8154a0c1646d5182f4c7cde55ee" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
      <member refid="classUrho3D_1_1Sphere_1a19d50feab2c1ea6fc7f9e54d96bfcd2b" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
      <member refid="classUrho3D_1_1Sphere_1aaa740dc9513756293812885736652a6b" prot="public" virt="non-virtual"><scope>Urho3D::Sphere</scope><name>Sphere</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
