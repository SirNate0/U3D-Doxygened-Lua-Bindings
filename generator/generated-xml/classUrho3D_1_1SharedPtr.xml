<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classUrho3D_1_1SharedPtr" kind="class" language="C++" prot="public">
    <compoundname>Urho3D::SharedPtr</compoundname>
    <includes refid="Ptr_8h" local="no">Ptr.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classUrho3D_1_1SharedPtr_1adf66bfb5d9f0f374ec092232e6b43eb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class SharedPtr</definition>
        <argsstring></argsstring>
        <name>SharedPtr</name>
        <param>
          <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="223" column="17" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classUrho3D_1_1SharedPtr_1af781fb290f5c98b6083b28afa7d7537d" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* Urho3D::SharedPtr&lt; T &gt;::ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <briefdescription>
<para>Pointer to the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="243" column="7" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a5ecd4070fd021fce0a7f947d747382b6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>SharedPtr</name>
        <briefdescription>
<para>Construct a null shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="40" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a1a16bd87463e1d9f0170d9184b45dd18" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>SharedPtr</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Construct a null shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="46" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a17a0adce37d14138af25622ef134cd61" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(const SharedPtr&lt; T &gt; &amp;rhs) noexcept</argsstring>
        <name>SharedPtr</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy-construct from another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="52" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a5ebc446a08684b71637a875817dd2b7c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(SharedPtr&lt; T &gt; &amp;&amp;rhs) noexcept</argsstring>
        <name>SharedPtr</name>
        <param>
          <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move-construct from another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="59" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1aca8aa94f5541a49074bc1dc17eb557dd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs) noexcept</argsstring>
        <name>SharedPtr</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy-construct from another shared pointer allowing implicit upcasting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="66" column="17" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a6a1b39346ccce7271064365b503b51c9" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::SharedPtr</definition>
        <argsstring>(T *ptr) noexcept</argsstring>
        <name>SharedPtr</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Construct from a raw pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="73" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a3c24b584b4d8e42a6c286b31f2fe4bc1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::~SharedPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>~SharedPtr</name>
        <briefdescription>
<para>Destruct. Release the object reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="80" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a248e1f0dee594908363567225cafdab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
        <definition>SharedPtr&lt;T&gt;&amp; Urho3D::SharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const SharedPtr&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assign from another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="86" column="15" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="86" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a2c6d4d408b02059924126d14cdbd2ff7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
        <definition>SharedPtr&lt;T&gt;&amp; Urho3D::SharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(SharedPtr&lt; T &gt; &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move-assign from another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="98" column="15" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a0c1804ebbe483b03f4f5719112b2fdc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
        <definition>SharedPtr&lt;T&gt;&amp; Urho3D::SharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assign from another shared pointer allowing implicit upcasting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="107" column="27" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1af0d05913df97604e2177cc2abce38e63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
        <definition>SharedPtr&lt;T&gt;&amp; Urho3D::SharedPtr&lt; T &gt;::operator=</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>operator=</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Assign from a raw pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="119" column="15" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="119" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a2703ec8e1247fdecb72c0408f9def457" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Urho3D::SharedPtr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Point to the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="131" column="7" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a05bda75ba691a9e6e50f36cf2544a458" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; Urho3D::SharedPtr&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereference the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="138" column="7" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1afc26d1b98831df503f2d701b6f1590a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; Urho3D::SharedPtr&lt; T &gt;::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Subscript the object if applicable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="145" column="7" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1ac65b3149afe0ddd6524e2da06e349268" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Urho3D::SharedPtr&lt; T &gt;::operator&lt;</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for less than with another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="152" column="17" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1aebd46edda43412cc04aa25b9b10a5493" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Urho3D::SharedPtr&lt; T &gt;::operator==</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for equality with another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="155" column="22" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1ad3c8da40d390008393359d90dffe30a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Urho3D::SharedPtr&lt; T &gt;::operator!=</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Test for inequality with another shared pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="158" column="22" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1adbf44e7b0a61c80fe494d9ec5eace65d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::SharedPtr&lt; T &gt;::operator T*</definition>
        <argsstring>() const</argsstring>
        <name>operator T*</name>
        <briefdescription>
<para>Convert to a raw pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="161" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a913ae8f8f0e4eced71a33195f3343a08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::SharedPtr&lt; T &gt;::Swap</definition>
        <argsstring>(SharedPtr&lt; T &gt; &amp;rhs)</argsstring>
        <name>Swap</name>
        <param>
          <type><ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Swap with another <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="164" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a438333cddc59c6f41a55bbf50ad39299" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::SharedPtr&lt; T &gt;::Reset</definition>
        <argsstring>(T *ptr=nullptr)</argsstring>
        <name>Reset</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Reset with another pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="167" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a5216c37523152c78a8f47f7c73303fc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Urho3D::SharedPtr&lt; T &gt;::Detach</definition>
        <argsstring>()</argsstring>
        <name>Detach</name>
        <briefdescription>
<para>Detach without destroying the object even if the refcount goes zero. To be used for scripting language interoperation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="174" column="7" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="174" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a8a8fc6e464f33d15fe07373e5d0a95bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Urho3D::SharedPtr&lt; T &gt;::StaticCast</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs)</argsstring>
        <name>StaticCast</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Perform a static cast from a shared pointer of another type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="188" column="22" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1af0450e90e9b2f0fbc6f46d5ed277074d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Urho3D::SharedPtr&lt; T &gt;::DynamicCast</definition>
        <argsstring>(const SharedPtr&lt; U &gt; &amp;rhs)</argsstring>
        <name>DynamicCast</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1SharedPtr" kindref="compound">SharedPtr</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Perform a dynamic cast from a shared pointer of another type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="195" column="22" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a620e2d8021b12feee1af80cb27645ff0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::SharedPtr&lt; T &gt;::Null</definition>
        <argsstring>() const</argsstring>
        <name>Null</name>
        <briefdescription>
<para>Check if the pointer is null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="202" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1af503c8e557f12b7c6b1453bb634f7aae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::SharedPtr&lt; T &gt;::NotNull</definition>
        <argsstring>() const</argsstring>
        <name>NotNull</name>
        <briefdescription>
<para>Check if the pointer is not null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="205" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a97fe2237a54d14f3a27d5aefe7047940" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Urho3D::SharedPtr&lt; T &gt;::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Return the raw pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="208" column="7" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1ac8bf916bfbb9fcd4397221681233cde0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Urho3D::SharedPtr&lt; T &gt;::Refs</definition>
        <argsstring>() const</argsstring>
        <name>Refs</name>
        <briefdescription>
<para>Return the object&apos;s reference count, or 0 if the pointer is null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="211" column="9" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1aa7bdd64d2bae22159542eb0fbe90f92b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Urho3D::SharedPtr&lt; T &gt;::WeakRefs</definition>
        <argsstring>() const</argsstring>
        <name>WeakRefs</name>
        <briefdescription>
<para>Return the object&apos;s weak reference count, or 0 if the pointer is null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="214" column="9" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a47e64442d0c821cbf23bf02078a03561" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structUrho3D_1_1RefCount" kindref="compound">RefCount</ref> *</type>
        <definition>RefCount* Urho3D::SharedPtr&lt; T &gt;::RefCountPtr</definition>
        <argsstring>() const</argsstring>
        <name>RefCountPtr</name>
        <briefdescription>
<para>Return pointer to the <ref refid="structUrho3D_1_1RefCount" kindref="compound">RefCount</ref> structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="217" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a5eae057a4bcab0029ff7b4a41d10fa5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Urho3D::SharedPtr&lt; T &gt;::ToHash</definition>
        <argsstring>() const</argsstring>
        <name>ToHash</name>
        <briefdescription>
<para>Return hash value for <ref refid="classUrho3D_1_1HashSet" kindref="compound">HashSet</ref> &amp; <ref refid="classUrho3D_1_1HashMap" kindref="compound">HashMap</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="220" column="14" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="220" bodyend="220"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1a683e31619a9da48d9c7bce818baff684" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::SharedPtr&lt; T &gt;::AddRef</definition>
        <argsstring>()</argsstring>
        <name>AddRef</name>
        <briefdescription>
<para>Add a reference to the object pointed to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="226" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1SharedPtr_1ab21183868376fa382855891ba0ef0a2f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::SharedPtr&lt; T &gt;::ReleaseRef</definition>
        <argsstring>()</argsstring>
        <name>ReleaseRef</name>
        <briefdescription>
<para>Release the object reference and delete it if necessary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="233" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="233" bodyend="240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Shared pointer template class with intrusive reference counting. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" line="36" column="12" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Container/Ptr.h" bodystart="37" bodyend="244"/>
    <listofallmembers>
      <member refid="classUrho3D_1_1SharedPtr_1a683e31619a9da48d9c7bce818baff684" prot="private" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>AddRef</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a5216c37523152c78a8f47f7c73303fc2" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>Detach</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1af0450e90e9b2f0fbc6f46d5ed277074d" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>DynamicCast</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a97fe2237a54d14f3a27d5aefe7047940" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>Get</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1af503c8e557f12b7c6b1453bb634f7aae" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>NotNull</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a620e2d8021b12feee1af80cb27645ff0" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>Null</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1adbf44e7b0a61c80fe494d9ec5eace65d" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator T*</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1ad3c8da40d390008393359d90dffe30a5" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator!=</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a05bda75ba691a9e6e50f36cf2544a458" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator*</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a2703ec8e1247fdecb72c0408f9def457" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator-&gt;</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1ac65b3149afe0ddd6524e2da06e349268" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator&lt;</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a248e1f0dee594908363567225cafdab0" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a2c6d4d408b02059924126d14cdbd2ff7" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a0c1804ebbe483b03f4f5719112b2fdc9" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1af0d05913df97604e2177cc2abce38e63" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1aebd46edda43412cc04aa25b9b10a5493" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator==</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1afc26d1b98831df503f2d701b6f1590a9" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>operator[]</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1af781fb290f5c98b6083b28afa7d7537d" prot="private" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>ptr_</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a47e64442d0c821cbf23bf02078a03561" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>RefCountPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1ac8bf916bfbb9fcd4397221681233cde0" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>Refs</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1ab21183868376fa382855891ba0ef0a2f" prot="private" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>ReleaseRef</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a438333cddc59c6f41a55bbf50ad39299" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>Reset</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1adf66bfb5d9f0f374ec092232e6b43eb3" prot="private" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a5ecd4070fd021fce0a7f947d747382b6" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a1a16bd87463e1d9f0170d9184b45dd18" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a17a0adce37d14138af25622ef134cd61" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a5ebc446a08684b71637a875817dd2b7c" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1aca8aa94f5541a49074bc1dc17eb557dd" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a6a1b39346ccce7271064365b503b51c9" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>SharedPtr</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a8a8fc6e464f33d15fe07373e5d0a95bf" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>StaticCast</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a913ae8f8f0e4eced71a33195f3343a08" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>Swap</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a5eae057a4bcab0029ff7b4a41d10fa5b" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>ToHash</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1aa7bdd64d2bae22159542eb0fbe90f92b" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>WeakRefs</name></member>
      <member refid="classUrho3D_1_1SharedPtr_1a3c24b584b4d8e42a6c286b31f2fe4bc1" prot="public" virt="non-virtual"><scope>Urho3D::SharedPtr</scope><name>~SharedPtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
