<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classUrho3D_1_1Ray" kind="class" language="C++" prot="public">
    <compoundname>Urho3D::Ray</compoundname>
    <includes refid="Ray_8h" local="no">Ray.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classUrho3D_1_1Ray_1a27df032f7d802b4595ece1d70896d0e5" prot="public" static="no" mutable="no">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Ray::origin_</definition>
        <argsstring></argsstring>
        <name>origin_</name>
        <briefdescription>
<para><ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> origin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="111" column="13" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classUrho3D_1_1Ray_1a1d85bded5863ada8e089037714a21a78" prot="public" static="no" mutable="no">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Ray::direction_</definition>
        <argsstring></argsstring>
        <name>direction_</name>
        <briefdescription>
<para><ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="113" column="13" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a052235ae24a632f6bbd504565de10885" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Ray::Ray</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>Ray</name>
        <briefdescription>
<para>Construct a degenerate ray with zero origin and direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a82ac9cf6f9bc04e09ca5512c45992258" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Ray::Ray</definition>
        <argsstring>(const Vector3 &amp;origin, const Vector3 &amp;direction) noexcept</argsstring>
        <name>Ray</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Construct from origin and direction. The direction will be normalized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="45" column="5" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1ae9502d36de0e0e2984de012f79b95479" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Urho3D::Ray::Ray</definition>
        <argsstring>(const Ray &amp;ray) noexcept=default</argsstring>
        <name>Ray</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
<para>Copy-construct from another ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1ab168d0a8a050f440459ecd0557c69092" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
        <definition>Ray&amp; Urho3D::Ray::operator=</definition>
        <argsstring>(const Ray &amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assign from another ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1ab1e350774ddc1d38d8a73b50e8b12cb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Ray::operator==</definition>
        <argsstring>(const Ray &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Check for equality with another ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="57" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1aea4afa2ac05cfdc0ee537f24406cfad8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Ray::operator!=</definition>
        <argsstring>(const Ray &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Check for inequality with another ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="60" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1af567cd1a84949df6a4222e09f5c49a17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Urho3D::Ray::Define</definition>
        <argsstring>(const Vector3 &amp;origin, const Vector3 &amp;direction)</argsstring>
        <name>Define</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Define from origin and direction. The direction will be normalized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="63" column="10" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a7dd09c4210e815bda1fcd871a511c1aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Ray::Project</definition>
        <argsstring>(const Vector3 &amp;point) const</argsstring>
        <name>Project</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Project a point on the ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="70" column="13" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a9e6581c1228a53ba8c4b83e9fce82ec1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::Distance</definition>
        <argsstring>(const Vector3 &amp;point) const</argsstring>
        <name>Distance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Return distance of a point from the ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="77" column="11" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a9adcdf425703d1b1a0fb5cd9162f196e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Urho3D::Ray::ClosestPoint</definition>
        <argsstring>(const Ray &amp;ray) const</argsstring>
        <name>ClosestPoint</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
<para>Return closest point to another ray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="84" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a5cf1fab1805b18c51c9d65745a9ed4a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const Plane &amp;plane) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Plane" kindref="compound">Plane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <briefdescription>
<para>Return hit distance to a plane, or infinity if no hit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="86" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a49d9c359ef9a484295381bb8ff5e7332" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const BoundingBox &amp;box) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Return hit distance to a bounding box, or infinity if no hit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="88" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a6cd74a4b9d1ee4595587e6438f157b29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const Frustum &amp;frustum, bool solidInside=true) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Frustum" kindref="compound">Frustum</ref> &amp;</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>solidInside</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return hit distance to a frustum, or infinity if no hit. If solidInside parameter is true (default) rays originating from inside return zero distance, otherwise the distance to the closest plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="90" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a67d79637313133a9b743e9f7c4968097" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const Sphere &amp;sphere) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
<para>Return hit distance to a sphere, or infinity if no hit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="92" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a163bd489388539877bc7b2748da35e72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const Vector3 &amp;v0, const Vector3 &amp;v1, const Vector3 &amp;v2, Vector3 *outNormal=nullptr, Vector3 *outBary=nullptr) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>outNormal</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>outBary</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Return hit distance to a triangle, or infinity if no hit. Optionally return hit normal and hit barycentric coordinate at intersect point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="94" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a69fa121b65fa2e7c000fc39804ef37b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const void *vertexData, unsigned vertexStride, unsigned vertexStart, unsigned vertexCount, Vector3 *outNormal=nullptr, Vector2 *outUV=nullptr, unsigned uvOffset=0) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const void *</type>
          <declname>vertexData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexStride</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexStart</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexCount</declname>
        </param>
        <param>
          <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>outNormal</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="classUrho3D_1_1Vector2" kindref="compound">Vector2</ref> *</type>
          <declname>outUV</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>uvOffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return hit distance to non-indexed geometry data, or infinity if no hit. Optionally return hit normal and hit uv coordinates at intersect point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="96" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a1a9a2def6b3ed7b80a20d3e980465e8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Urho3D::Ray::HitDistance</definition>
        <argsstring>(const void *vertexData, unsigned vertexStride, const void *indexData, unsigned indexSize, unsigned indexStart, unsigned indexCount, Vector3 *outNormal=nullptr, Vector2 *outUV=nullptr, unsigned uvOffset=0) const</argsstring>
        <name>HitDistance</name>
        <param>
          <type>const void *</type>
          <declname>vertexData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexStride</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>indexData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indexSize</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indexStart</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indexCount</declname>
        </param>
        <param>
          <type><ref refid="classUrho3D_1_1Vector3" kindref="compound">Vector3</ref> *</type>
          <declname>outNormal</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="classUrho3D_1_1Vector2" kindref="compound">Vector2</ref> *</type>
          <declname>outUV</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>uvOffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return hit distance to indexed geometry data, or infinity if no hit. Optionally return hit normal and hit uv coordinates at intersect point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="100" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1ac6832fe0e720bfe01d3f11d6cbd10c53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Ray::InsideGeometry</definition>
        <argsstring>(const void *vertexData, unsigned vertexSize, unsigned vertexStart, unsigned vertexCount) const</argsstring>
        <name>InsideGeometry</name>
        <param>
          <type>const void *</type>
          <declname>vertexData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexSize</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexStart</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexCount</declname>
        </param>
        <briefdescription>
<para>Return whether ray is inside non-indexed geometry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1a09a4324e2f42adcdd2affe06e727b5c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Urho3D::Ray::InsideGeometry</definition>
        <argsstring>(const void *vertexData, unsigned vertexSize, const void *indexData, unsigned indexSize, unsigned indexStart, unsigned indexCount) const</argsstring>
        <name>InsideGeometry</name>
        <param>
          <type>const void *</type>
          <declname>vertexData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>vertexSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>indexData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indexSize</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indexStart</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>indexCount</declname>
        </param>
        <briefdescription>
<para>Return whether ray is inside indexed geometry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classUrho3D_1_1Ray_1ad118ea8accd0dca2689b4944a38a62bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classUrho3D_1_1Ray" kindref="compound">Ray</ref></type>
        <definition>Ray Urho3D::Ray::Transformed</definition>
        <argsstring>(const Matrix3x4 &amp;transform) const</argsstring>
        <name>Transformed</name>
        <param>
          <type>const <ref refid="classUrho3D_1_1Matrix3x4" kindref="compound">Matrix3x4</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Return transformed by a 3x4 matrix. This may result in a non-normalized direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="108" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Infinite straight line in three-dimensional space. ALL_FLOATS </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Urho3D::Vector3</label>
        <link refid="classUrho3D_1_1Vector3"/>
        <childnode refid="2" relation="usage">
          <edgelabel>BACK</edgelabel>
          <edgelabel>DOWN</edgelabel>
          <edgelabel>FORWARD</edgelabel>
          <edgelabel>LEFT</edgelabel>
          <edgelabel>ONE</edgelabel>
          <edgelabel>RIGHT</edgelabel>
          <edgelabel>UP</edgelabel>
          <edgelabel>ZERO</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Urho3D::Ray</label>
        <link refid="classUrho3D_1_1Ray"/>
        <childnode refid="2" relation="usage">
          <edgelabel>direction_</edgelabel>
          <edgelabel>origin_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" line="38" column="1" bodyfile="/home/nathan/Projects/u3d/Source/Urho3D/Math/Ray.h" bodystart="39" bodyend="114"/>
    <listofallmembers>
      <member refid="classUrho3D_1_1Ray_1a9adcdf425703d1b1a0fb5cd9162f196e" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>ClosestPoint</name></member>
      <member refid="classUrho3D_1_1Ray_1af567cd1a84949df6a4222e09f5c49a17" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Define</name></member>
      <member refid="classUrho3D_1_1Ray_1a1d85bded5863ada8e089037714a21a78" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>direction_</name></member>
      <member refid="classUrho3D_1_1Ray_1a9e6581c1228a53ba8c4b83e9fce82ec1" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Distance</name></member>
      <member refid="classUrho3D_1_1Ray_1a5cf1fab1805b18c51c9d65745a9ed4a2" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1a49d9c359ef9a484295381bb8ff5e7332" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1a6cd74a4b9d1ee4595587e6438f157b29" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1a67d79637313133a9b743e9f7c4968097" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1a163bd489388539877bc7b2748da35e72" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1a69fa121b65fa2e7c000fc39804ef37b6" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1a1a9a2def6b3ed7b80a20d3e980465e8d" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>HitDistance</name></member>
      <member refid="classUrho3D_1_1Ray_1ac6832fe0e720bfe01d3f11d6cbd10c53" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>InsideGeometry</name></member>
      <member refid="classUrho3D_1_1Ray_1a09a4324e2f42adcdd2affe06e727b5c9" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>InsideGeometry</name></member>
      <member refid="classUrho3D_1_1Ray_1aea4afa2ac05cfdc0ee537f24406cfad8" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>operator!=</name></member>
      <member refid="classUrho3D_1_1Ray_1ab168d0a8a050f440459ecd0557c69092" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>operator=</name></member>
      <member refid="classUrho3D_1_1Ray_1ab1e350774ddc1d38d8a73b50e8b12cb7" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>operator==</name></member>
      <member refid="classUrho3D_1_1Ray_1a27df032f7d802b4595ece1d70896d0e5" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>origin_</name></member>
      <member refid="classUrho3D_1_1Ray_1a7dd09c4210e815bda1fcd871a511c1aa" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Project</name></member>
      <member refid="classUrho3D_1_1Ray_1a052235ae24a632f6bbd504565de10885" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Ray</name></member>
      <member refid="classUrho3D_1_1Ray_1a82ac9cf6f9bc04e09ca5512c45992258" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Ray</name></member>
      <member refid="classUrho3D_1_1Ray_1ae9502d36de0e0e2984de012f79b95479" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Ray</name></member>
      <member refid="classUrho3D_1_1Ray_1ad118ea8accd0dca2689b4944a38a62bc" prot="public" virt="non-virtual"><scope>Urho3D::Ray</scope><name>Transformed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
