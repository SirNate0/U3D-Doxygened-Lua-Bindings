<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="List_8h" kind="file" language="C++">
    <compoundname>List.h</compoundname>
    <includes refid="ListBase_8h" local="yes">../Container/ListBase.h</includes>
    <includes local="no">initializer_list</includes>
    <includedby refid="BufferedSoundStream_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Audio/BufferedSoundStream.h</includedby>
    <includedby refid="ForEach_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Container/ForEach.h</includedby>
    <includedby refid="WorkQueue_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Core/WorkQueue.h</includedby>
    <includedby refid="DecalSet_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Graphics/DecalSet.h</includedby>
    <includedby refid="Octree_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Graphics/Octree.h</includedby>
    <includedby refid="View_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Graphics/View.h</includedby>
    <includedby refid="Input_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Input/Input.h</includedby>
    <includedby refid="FileSystem_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/IO/FileSystem.h</includedby>
    <includedby refid="FileWatcher_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/IO/FileWatcher.h</includedby>
    <includedby refid="Log_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/IO/Log.h</includedby>
    <includedby refid="ResourceCache_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/Resource/ResourceCache.h</includedby>
    <includedby refid="FontFace_8h" local="yes">/home/nathan/Projects/u3d/Source/Urho3D/UI/FontFace.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>../Container/ListBase.h</label>
        <link refid="ListBase_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../Container/Allocator.h</label>
        <link refid="Allocator_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Urho3D/Urho3D.h</label>
      </node>
      <node id="1">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Container/List.h</label>
        <link refid="List_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>../Container/Swap.h</label>
        <link refid="Swap_8h_source"/>
      </node>
      <node id="7">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/IO/FileSystem.h</label>
        <link refid="FileSystem_8h_source"/>
      </node>
      <node id="8">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Input/Input.h</label>
        <link refid="Input_8h"/>
      </node>
      <node id="6">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Graphics/Octree.h</label>
        <link refid="Octree_8h_source"/>
      </node>
      <node id="7">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Graphics/View.h</label>
        <link refid="View_8h_source"/>
      </node>
      <node id="15">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/UI/FontFaceFreeType.h</label>
        <link refid="FontFaceFreeType_8h_source"/>
      </node>
      <node id="2">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Audio/BufferedSoundStream.h</label>
        <link refid="BufferedSoundStream_8h_source"/>
      </node>
      <node id="14">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/UI/FontFaceBitmap.h</label>
        <link refid="FontFaceBitmap_8h_source"/>
      </node>
      <node id="10">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/IO/FileWatcher.h</label>
        <link refid="FileWatcher_8h_source"/>
      </node>
      <node id="4">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Core/WorkQueue.h</label>
        <link refid="WorkQueue_8h_source"/>
      </node>
      <node id="12">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Resource/ResourceCache.h</label>
        <link refid="ResourceCache_8h"/>
      </node>
      <node id="1">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Container/List.h</label>
        <link refid="List_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Graphics/DecalSet.h</label>
        <link refid="DecalSet_8h_source"/>
      </node>
      <node id="13">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/UI/FontFace.h</label>
        <link refid="FontFace_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/IO/Log.h</label>
        <link refid="Log_8h_source"/>
      </node>
      <node id="3">
        <label>/home/nathan/Projects/u3d/Source/Urho3D/Container/ForEach.h</label>
        <link refid="ForEach_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classUrho3D_1_1List" prot="public">Urho3D::List</innerclass>
    <innerclass refid="structUrho3D_1_1List_1_1Node" prot="public">Urho3D::List::Node</innerclass>
    <innerclass refid="structUrho3D_1_1List_1_1Iterator" prot="public">Urho3D::List::Iterator</innerclass>
    <innerclass refid="structUrho3D_1_1List_1_1ConstIterator" prot="public">Urho3D::List::ConstIterator</innerclass>
    <innernamespace refid="namespaceUrho3D">Urho3D</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2008-2022<sp/>the<sp/>Urho3D<sp/>project.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Container/ListBase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Urho3D</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classUrho3D_1_1List" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classUrho3D_1_1List" kindref="compound">List</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1ListBase" kindref="compound">ListBase</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="structUrho3D_1_1List_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1ListNodeBase" kindref="compound">ListNodeBase</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39" refid="structUrho3D_1_1List_1_1Node_1a4c7bb32c60de09c08ba09a69d4d3a333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Node_1a4c7bb32c60de09c08ba09a69d4d3a333" kindref="member">Node</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structUrho3D_1_1List_1_1Node_1a04c84c6df49ab4ca5528a5c43457cfe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Node_1a04c84c6df49ab4ca5528a5c43457cfe5" kindref="member">Node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Node_1a0bd28c401812c26a5849d78a49add73a" kindref="member">value_</ref>(value)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structUrho3D_1_1List_1_1Node_1a0bd28c401812c26a5849d78a49add73a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structUrho3D_1_1List_1_1Node_1a0bd28c401812c26a5849d78a49add73a" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structUrho3D_1_1List_1_1Node_1aa1b49d1118fc2af5ffe82ad091c35be0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="structUrho3D_1_1List_1_1Node_1aa1b49d1118fc2af5ffe82ad091c35be0" kindref="member">Next</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1ListNodeBase_1a215bd7d1bd9208e9c46d4c12117c024b" kindref="member">next_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structUrho3D_1_1List_1_1Node_1a264655bf84edfaeb553972e6fee2c6cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="structUrho3D_1_1List_1_1Node_1a264655bf84edfaeb553972e6fee2c6cb" kindref="member">Prev</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1ListNodeBase_1a367e689429827635e181da5bce49604d" kindref="member">prev_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structUrho3D_1_1List_1_1Iterator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1ListIteratorBase" kindref="compound">ListIteratorBase</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structUrho3D_1_1List_1_1Iterator_1a035abd2a5fc3ec8a6687237f01346dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1a035abd2a5fc3ec8a6687237f01346dce" kindref="member">Iterator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structUrho3D_1_1List_1_1Iterator_1a5ab383bad015dd52343d4ef9718c8556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1a5ab383bad015dd52343d4ef9718c8556" kindref="member">Iterator</ref>(<ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*<sp/>ptr)<sp/>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase" kindref="compound">ListIteratorBase</ref>(ptr)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structUrho3D_1_1List_1_1Iterator_1a6b5c6d8f269ee3acc43ed40e603a4c62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1a6b5c6d8f269ee3acc43ed40e603a4c62" kindref="member">operator ++</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ae00d73e9f6c814076803c9fb8f2fdf98" kindref="member">GotoNext</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structUrho3D_1_1List_1_1Iterator_1affc03717382b7300dc52102096a6a0f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1a6b5c6d8f269ee3acc43ed40e603a4c62" kindref="member">operator ++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>it<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ae00d73e9f6c814076803c9fb8f2fdf98" kindref="member">GotoNext</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structUrho3D_1_1List_1_1Iterator_1aad4af98d37a23a831919df4c614dc67e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1aad4af98d37a23a831919df4c614dc67e" kindref="member">operator --</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ac63b48ac4d55bcae49d3e2dcd09edf0b" kindref="member">GotoPrev</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structUrho3D_1_1List_1_1Iterator_1abee910b6efb601c4eff131df3d9355b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1aad4af98d37a23a831919df4c614dc67e" kindref="member">operator --</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>it<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ac63b48ac4d55bcae49d3e2dcd09edf0b" kindref="member">GotoPrev</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structUrho3D_1_1List_1_1Iterator_1af3fe51475b9fb29895be3b0d9acccb3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1af3fe51475b9fb29895be3b0d9acccb3c" kindref="member">operator -&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>))-&gt;value_;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structUrho3D_1_1List_1_1Iterator_1ab5f41603fe868bd01098733ce30f7914" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="structUrho3D_1_1List_1_1Iterator_1ab5f41603fe868bd01098733ce30f7914" kindref="member">operator *</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>))-&gt;value_;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structUrho3D_1_1List_1_1ConstIterator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1ListIteratorBase" kindref="compound">ListIteratorBase</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110" refid="structUrho3D_1_1List_1_1ConstIterator_1a69d15706b844f2384d4122c01fe3a56b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1a69d15706b844f2384d4122c01fe3a56b" kindref="member">ConstIterator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structUrho3D_1_1List_1_1ConstIterator_1a9af15c7c70bf92278d2db07066cbbd64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1a9af15c7c70bf92278d2db07066cbbd64" kindref="member">ConstIterator</ref>(<ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*<sp/>ptr)<sp/>:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase" kindref="compound">ListIteratorBase</ref>(ptr)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structUrho3D_1_1List_1_1ConstIterator_1a04bf79ec5fc5c703c80bc7028114968b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1a04bf79ec5fc5c703c80bc7028114968b" kindref="member">ConstIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>rhs)<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT(google-explicit-constructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase" kindref="compound">ListIteratorBase</ref>(rhs.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structUrho3D_1_1List_1_1ConstIterator_1a558525496b731ab2c2d17cc7301f15a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>&amp;<sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1a558525496b731ab2c2d17cc7301f15a5" kindref="member">operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref><sp/>=<sp/>rhs.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structUrho3D_1_1List_1_1ConstIterator_1ad1ae437d0370f6ce784dddb53bb09bf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>&amp;<sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1ad1ae437d0370f6ce784dddb53bb09bf8" kindref="member">operator ++</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ae00d73e9f6c814076803c9fb8f2fdf98" kindref="member">GotoNext</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structUrho3D_1_1List_1_1ConstIterator_1ad88bdfc7707ec4ca10c5166929f6831c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1ad1ae437d0370f6ce784dddb53bb09bf8" kindref="member">operator ++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>it<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ae00d73e9f6c814076803c9fb8f2fdf98" kindref="member">GotoNext</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structUrho3D_1_1List_1_1ConstIterator_1ab3112d29be00736c1f8f147319520c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>&amp;<sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1ab3112d29be00736c1f8f147319520c1d" kindref="member">operator --</ref>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ac63b48ac4d55bcae49d3e2dcd09edf0b" kindref="member">GotoPrev</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="structUrho3D_1_1List_1_1ConstIterator_1a011733679bdaa04babefa0092c1de349" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1ab3112d29be00736c1f8f147319520c1d" kindref="member">operator --</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>it<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1ListIteratorBase_1ac63b48ac4d55bcae49d3e2dcd09edf0b" kindref="member">GotoPrev</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structUrho3D_1_1List_1_1ConstIterator_1aa51b383905157edd930588a35351e528" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1aa51b383905157edd930588a35351e528" kindref="member">operator -&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>))-&gt;value_;<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structUrho3D_1_1List_1_1ConstIterator_1a2eaf665ae725c4642a79ecf7bd373f54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator_1a2eaf665ae725c4642a79ecf7bd373f54" kindref="member">operator *</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>))-&gt;value_;<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classUrho3D_1_1List_1ae4089403ea9271fed806f8012047e6d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1ae4089403ea9271fed806f8012047e6d2" kindref="member">List</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1a7d920e5e7075e8cfdffafaee60d0a50f" kindref="member">allocator_</ref><sp/>=<sp/>AllocatorInitialize((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1af89f1eed6e2247f82f6febae99bbf36a" kindref="member">head_</ref><sp/>=<sp/><ref refid="classUrho3D_1_1ListBase_1a05f4b523f5f2956ee9aadf7ee1350d0f" kindref="member">tail_</ref><sp/>=<sp/>ReserveNode();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classUrho3D_1_1List_1a886ffc03f5e954120c5b580574a15447" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1a886ffc03f5e954120c5b580574a15447" kindref="member">List</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref>&amp;<sp/>list)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>the<sp/>tail<sp/>node<sp/>+<sp/>initial<sp/>capacity<sp/>according<sp/>to<sp/>the<sp/>list&apos;s<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1a7d920e5e7075e8cfdffafaee60d0a50f" kindref="member">allocator_</ref><sp/>=<sp/>AllocatorInitialize((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>),<sp/>list.<ref refid="classUrho3D_1_1List_1a1a8e5c7427195f2095b3853eb680aa5a" kindref="member">Size</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1af89f1eed6e2247f82f6febae99bbf36a" kindref="member">head_</ref><sp/>=<sp/><ref refid="classUrho3D_1_1ListBase_1a05f4b523f5f2956ee9aadf7ee1350d0f" kindref="member">tail_</ref><sp/>=<sp/>ReserveNode();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classUrho3D_1_1List_1af947b1a3e71140ece21a11e83e6595da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1af947b1a3e71140ece21a11e83e6595da" kindref="member">List</ref>(<ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref><sp/>&amp;&amp;<sp/>list)<sp/>noexcept</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1a1886c5c306ce981959db2599b9ca204b" kindref="member">Swap</ref>(list);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classUrho3D_1_1List_1abf33f2b22ec25e7e61f2cee9c4c895b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1abf33f2b22ec25e7e61f2cee9c4c895b7" kindref="member">List</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;T&gt;&amp;<sp/>list)<sp/>:<sp/><ref refid="classUrho3D_1_1List" kindref="compound">List</ref>()</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>list.begin();<sp/>it<sp/>!=<sp/>list.end();<sp/>it++)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1ad98bf477e49b2969f494f1da08085d9a" kindref="member">Push</ref>(*it);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classUrho3D_1_1List_1a9ba48126c55a8cdd0a3de32451d8ed1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1a9ba48126c55a8cdd0a3de32451d8ed1d" kindref="member">~List</ref>()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1a2c7cf1404299d404c12476dd066a2a17" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeNode(Tail());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocatorUninitialize(<ref refid="classUrho3D_1_1ListBase_1a7d920e5e7075e8cfdffafaee60d0a50f" kindref="member">allocator_</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classUrho3D_1_1List_1a49cb620588f2cc294358cc0c641259eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List</ref>&amp;<sp/><ref refid="classUrho3D_1_1List_1a49cb620588f2cc294358cc0c641259eb" kindref="member">operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear,<sp/>then<sp/>insert<sp/>the<sp/>nodes<sp/>of<sp/>the<sp/>other<sp/>list.<sp/>In<sp/>case<sp/>of<sp/>self-assignment<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;rhs<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1a2c7cf1404299d404c12476dd066a2a17" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1a64ad004e4003e00a2750add68629ac61" kindref="member">Insert</ref>(<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>(),<sp/>rhs);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classUrho3D_1_1List_1a9736889edc8a1b39770a4732d8f90b4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List</ref>&amp;<sp/><ref refid="classUrho3D_1_1List_1a49cb620588f2cc294358cc0c641259eb" kindref="member">operator =</ref>(<ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref><sp/>&amp;&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1a1886c5c306ce981959db2599b9ca204b" kindref="member">Swap</ref>(rhs);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classUrho3D_1_1List_1a35c577e2ffc0aa83a420903fb43fe6d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List</ref>&amp;<sp/><ref refid="classUrho3D_1_1List_1a35c577e2ffc0aa83a420903fb43fe6d7" kindref="member">operator +=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1ad98bf477e49b2969f494f1da08085d9a" kindref="member">Push</ref>(rhs);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classUrho3D_1_1List_1ab1755a459ff02a687f4901018178bc37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List</ref>&amp;<sp/><ref refid="classUrho3D_1_1List_1a35c577e2ffc0aa83a420903fb43fe6d7" kindref="member">operator +=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1a64ad004e4003e00a2750add68629ac61" kindref="member">Insert</ref>(<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>(),<sp/>rhs);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="classUrho3D_1_1List_1aee6a15dcf1d892fa2c3d55145c6bbd49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1aee6a15dcf1d892fa2c3d55145c6bbd49" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="242"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref><sp/>!=<sp/><ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>i<sp/>=<sp/><ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>j<sp/>=<sp/>rhs.<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>())</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>!=<sp/>*j)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classUrho3D_1_1List_1a56828e63d92113245e13c3e485d8838e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a56828e63d92113245e13c3e485d8838e" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="261"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref><sp/>!=<sp/><ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>i<sp/>=<sp/><ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>j<sp/>=<sp/>rhs.<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>())</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>!=<sp/>*j)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classUrho3D_1_1List_1ad98bf477e49b2969f494f1da08085d9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1ad98bf477e49b2969f494f1da08085d9a" kindref="member">Push</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{<sp/>InsertNode(Tail(),<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classUrho3D_1_1List_1adfeb45948311de863fe1bea91709620a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1adfeb45948311de863fe1bea91709620a" kindref="member">PushFront</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{<sp/>InsertNode(Head(),<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classUrho3D_1_1List_1a64ad004e4003e00a2750add68629ac61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a64ad004e4003e00a2750add68629ac61" kindref="member">Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{<sp/>InsertNode(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dest.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>),<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classUrho3D_1_1List_1a0d5e95d3388e76d96497dda595f8d885" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a0d5e95d3388e76d96497dda595f8d885" kindref="member">Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">List&lt;T&gt;</ref>&amp;<sp/>list)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>destNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dest.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>it<sp/>=<sp/>list.<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>end<sp/>=<sp/>list.<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>end)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertNode(destNode,<sp/>*it++);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classUrho3D_1_1List_1a01a96c0cf7fde5ddd0db40538d1a06be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a01a96c0cf7fde5ddd0db40538d1a06be" kindref="member">Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>&amp;<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>&amp;<sp/>end)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>destNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dest.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>it<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>end)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertNode(destNode,<sp/>*it++);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classUrho3D_1_1List_1a0d60e313c6e3f8925fa577137039519e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a0d60e313c6e3f8925fa577137039519e" kindref="member">Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>end)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>destNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dest.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>ptr<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>end)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertNode(destNode,<sp/>*ptr++);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classUrho3D_1_1List_1ae67fedce4c833c29618e9be750036ef9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1ae67fedce4c833c29618e9be750036ef9" kindref="member">Pop</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1ab4666f7025b8dd0560c6cb8ce93f6ab6" kindref="member">Erase</ref>(--<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classUrho3D_1_1List_1a486b4d677408d315d0c337094c588c6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a486b4d677408d315d0c337094c588c6b" kindref="member">PopFront</ref>()</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1ab4666f7025b8dd0560c6cb8ce93f6ab6" kindref="member">Erase</ref>(<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classUrho3D_1_1List_1ab4666f7025b8dd0560c6cb8ce93f6ab6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classUrho3D_1_1List_1ab4666f7025b8dd0560c6cb8ce93f6ab6" kindref="member">Erase</ref>(<ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>it)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>(EraseNode(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(it.<ref refid="structUrho3D_1_1ListIteratorBase_1a80ff89552b2692650c91993bb595881e" kindref="member">ptr_</ref>)));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classUrho3D_1_1List_1a8851bd8de2cb1993ac53e6fec3472ad2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classUrho3D_1_1List_1a8851bd8de2cb1993ac53e6fec3472ad2" kindref="member">Erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>&amp;<sp/>end)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>it<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>end)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="classUrho3D_1_1List_1ab4666f7025b8dd0560c6cb8ce93f6ab6" kindref="member">Erase</ref>(it);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classUrho3D_1_1List_1a2c7cf1404299d404c12476dd066a2a17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a2c7cf1404299d404c12476dd066a2a17" kindref="member">Clear</ref>()</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classUrho3D_1_1List_1a1a8e5c7427195f2095b3853eb680aa5a" kindref="member">Size</ref>())</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>i<sp/>=<sp/><ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();<sp/>i<sp/>!=<sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>();)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeNode(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structUrho3D_1_1List_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i++.ptr_));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.ptr_-&gt;prev_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1af89f1eed6e2247f82f6febae99bbf36a" kindref="member">head_</ref><sp/>=<sp/><ref refid="classUrho3D_1_1ListBase_1a05f4b523f5f2956ee9aadf7ee1350d0f" kindref="member">tail_</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="classUrho3D_1_1List_1acac981da2fda55b3a33ac2ca381c81df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1acac981da2fda55b3a33ac2ca381c81df" kindref="member">Resize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>newSize)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref><sp/>&gt;<sp/>newSize)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1List_1ae67fedce4c833c29618e9be750036ef9" kindref="member">Pop</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref><sp/>&lt;<sp/>newSize)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertNode(Tail(),<sp/>T());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classUrho3D_1_1List_1a8a6e9342aabbf296fee7cd87ca096c19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classUrho3D_1_1List_1a8a6e9342aabbf296fee7cd87ca096c19" kindref="member">Find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/>it<sp/>=<sp/><ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>()<sp/>&amp;&amp;<sp/>*it<sp/>!=<sp/>value)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classUrho3D_1_1List_1a8d272f86844deab79bbeda205b079039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/><ref refid="classUrho3D_1_1List_1a8d272f86844deab79bbeda205b079039" kindref="member">Find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="382"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/>it<sp/>=<sp/><ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>()<sp/>&amp;&amp;<sp/>*it<sp/>!=<sp/>value)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classUrho3D_1_1List_1a1e4253dca9c3c61b55cf3345a6999428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a1e4253dca9c3c61b55cf3345a6999428" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a8a6e9342aabbf296fee7cd87ca096c19" kindref="member">Find</ref>(value)<sp/>!=<sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>();<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>(Head());<sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classUrho3D_1_1List_1a762e1fae28ceee7ba578573b7c7b2d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/><ref refid="classUrho3D_1_1List_1a762e1fae28ceee7ba578573b7c7b2d42" kindref="member">Begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>(Head());<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Iterator</ref>(Tail());<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classUrho3D_1_1List_1aee8cd8d9a412420b1b8f8653fde6de34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref><sp/><ref refid="classUrho3D_1_1List_1aee8cd8d9a412420b1b8f8653fde6de34" kindref="member">End</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">ConstIterator</ref>(Tail());<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classUrho3D_1_1List_1acb40f4e227cb8b1afd45c00d8853e3a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classUrho3D_1_1List_1acb40f4e227cb8b1afd45c00d8853e3a1" kindref="member">Front</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classUrho3D_1_1List_1ab1e85e903cd9f84b4a61f9add61f9760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classUrho3D_1_1List_1ab1e85e903cd9f84b4a61f9add61f9760" kindref="member">Front</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();<sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classUrho3D_1_1List_1af0c33a475b3bfdb5920f8aad8f2a200b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classUrho3D_1_1List_1af0c33a475b3bfdb5920f8aad8f2a200b" kindref="member">Back</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(--<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>());<sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classUrho3D_1_1List_1af0717b42297ffe0f40b706d2d19f1e5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classUrho3D_1_1List_1af0717b42297ffe0f40b706d2d19f1e5a" kindref="member">Back</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(--<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>());<sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classUrho3D_1_1List_1a1a8e5c7427195f2095b3853eb680aa5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1a1a8e5c7427195f2095b3853eb680aa5a" kindref="member">Size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="classUrho3D_1_1List_1ab4ff5a24f5f58a7b6d0d531204f70839" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List_1ab4ff5a24f5f58a7b6d0d531204f70839" kindref="member">Empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref><sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1Node" kindref="compound">Node</ref>*<sp/>Head()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classUrho3D_1_1Node" kindref="compound">Node</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classUrho3D_1_1ListBase_1af89f1eed6e2247f82f6febae99bbf36a" kindref="member">head_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>Node*<sp/>Tail()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Node*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classUrho3D_1_1ListBase_1a05f4b523f5f2956ee9aadf7ee1350d0f" kindref="member">tail_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNode(Node*<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>newNode<sp/>=<sp/>ReserveNode(value);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>prev<sp/>=<sp/>dest-&gt;Prev();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNode-&gt;next_<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNode-&gt;prev_<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;next_<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;prev_<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reassign<sp/>the<sp/>head<sp/>node<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest<sp/>==<sp/>Head())</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1af89f1eed6e2247f82f6febae99bbf36a" kindref="member">head_</ref><sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>Node*<sp/>EraseNode(Node*<sp/>node)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tail<sp/>node<sp/>can<sp/>not<sp/>be<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node<sp/>||<sp/>node<sp/>==<sp/><ref refid="classUrho3D_1_1ListBase_1a05f4b523f5f2956ee9aadf7ee1350d0f" kindref="member">tail_</ref>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tail();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>prev<sp/>=<sp/>node-&gt;Prev();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>next<sp/>=<sp/>node-&gt;Next();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;next_<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next-&gt;prev_<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reassign<sp/>the<sp/>head<sp/>node<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>Head())</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUrho3D_1_1ListBase_1af89f1eed6e2247f82f6febae99bbf36a" kindref="member">head_</ref><sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeNode(node);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="classUrho3D_1_1ListBase_1a595a2663cf68ad77c496912056f2d28e" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>Node*<sp/>ReserveNode()</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>newNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Node*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(AllocatorReserve(<ref refid="classUrho3D_1_1ListBase_1a7d920e5e7075e8cfdffafaee60d0a50f" kindref="member">allocator_</ref>));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(newNode)<sp/>Node();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newNode;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>Node*<sp/>ReserveNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>newNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Node*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(AllocatorReserve(<ref refid="classUrho3D_1_1ListBase_1a7d920e5e7075e8cfdffafaee60d0a50f" kindref="member">allocator_</ref>));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(newNode)<sp/>Node(value);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newNode;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FreeNode(Node*<sp/>node)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(node)-&gt;~Node();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllocatorFree(<ref refid="classUrho3D_1_1ListBase_1a7d920e5e7075e8cfdffafaee60d0a50f" kindref="member">allocator_</ref>,<sp/>node);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">Urho3D::List&lt;T&gt;::ConstIterator</ref><sp/>begin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">Urho3D::List&lt;T&gt;</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();<sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1ConstIterator" kindref="compound">Urho3D::List&lt;T&gt;::ConstIterator</ref><sp/>end(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUrho3D_1_1List" kindref="compound">Urho3D::List&lt;T&gt;</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>();<sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Urho3D::List&lt;T&gt;::Iterator</ref><sp/>begin(<ref refid="classUrho3D_1_1List" kindref="compound">Urho3D::List&lt;T&gt;</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.<ref refid="classUrho3D_1_1List_1a92d7346e3890b9494cd2bfe7444b0197" kindref="member">Begin</ref>();<sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structUrho3D_1_1List_1_1Iterator" kindref="compound">Urho3D::List&lt;T&gt;::Iterator</ref><sp/>end(<ref refid="classUrho3D_1_1List" kindref="compound">Urho3D::List&lt;T&gt;</ref>&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.<ref refid="classUrho3D_1_1List_1a036fa54a08fc8b2377f062c8bcee2f52" kindref="member">End</ref>();<sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/nathan/Projects/u3d/Source/Urho3D/Container/List.h"/>
  </compounddef>
</doxygen>
